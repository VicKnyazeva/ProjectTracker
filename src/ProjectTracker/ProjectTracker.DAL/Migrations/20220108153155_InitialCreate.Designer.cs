// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTracker.DAL;

namespace ProjectTracker.DAL.Migrations
{
    [DbContext(typeof(ProjectTrackerDbContext))]
    [Migration("20220108153155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ProjectTracker.DAL.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "desc #1",
                            Name = "Project #1",
                            Priority = 0,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "desc #2",
                            Name = "Project #2",
                            Priority = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "task desc #1.1",
                            Name = "Task #1.1",
                            Priority = 0,
                            ProjectId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "task desc #1.2",
                            Name = "Task #1.2",
                            Priority = 0,
                            ProjectId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "task desc #2.1",
                            Name = "Task #2.1",
                            Priority = 0,
                            ProjectId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.ProjectTaskField", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("TaskId", "Name");

                    b.ToTable("ProjectTaskFields");

                    b.HasData(
                        new
                        {
                            TaskId = 2,
                            Name = "FIELD1",
                            Value = "f 1"
                        },
                        new
                        {
                            TaskId = 2,
                            Name = "Field1",
                            Value = "f 1 low"
                        },
                        new
                        {
                            TaskId = 2,
                            Name = "FIELD #2",
                            Value = "f 1"
                        });
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.ProjectTask", b =>
                {
                    b.HasOne("ProjectTracker.DAL.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.ProjectTaskField", b =>
                {
                    b.HasOne("ProjectTracker.DAL.Models.ProjectTask", "Task")
                        .WithMany("Fields")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ProjectTracker.DAL.Models.ProjectTask", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
